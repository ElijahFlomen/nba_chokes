[["index.html", "NBA Chokes Chapter 1 Introduction", " NBA Chokes Elijah Flomen, Blake Hartung 2021-12-12 Chapter 1 Introduction Overall viewership of basketball in the United States has skyrocketed over the last few years, most notably rising 34% from last season. Perhaps a driving factor for its demand has to do with the notion that basketball is a sport that is well known for its thrilling endings. Unlike sports such as American football or baseball where it is possible for a single team to hold possession of the game for long periods of time, basketball is unique in that the gameflow is going through a constant start-and-stop pace, allowing for constant and rapid changes of possession. As a result of basketball’s inherent back-and-forth nature, it is not uncommon for a team to, at some point in the game, have a large probability of winning and then end up losing. In the sports community, if at any point a team has a high percentage of winning and then ends up losing a game, that is referred to as a ‘choke.’ For instance, in the context of basketball, if Team A leads Team B by 20 points going into the fourth quarter (12 minutes remaining) and then Team B ends up winning the game, this can likely be classified as a choke by Team A. Given the pace of basketball’s gameflow, matches often result in chokes and we thought that it would be interesting to investigate the data behind to explain these upset endings. For instance, are there teams that are more ‘choke’ prone than others? Do teams tend to have more comebacks when they play at home vs. when they are playing as a visitor? What are the most common reasons for a team to choke? Can we establish a categorical explanation for a choke, what mistakes did a team make for them to lose after such a large lead? Was it due to their fouls, missed shots, turnovers…? How do the individual player stats on a high choke team compare to league averages? Before we dive into the questions that guided our research, we also needed to make some subjective judgements regarding how we defined a choke and selected our data. One of the most crucial of these decisions being to set the maximum win percent threshold to define a subsequent loss as a choke. For the purposes of this analysis, we determined to set this threshold value to be at 90%. Therefore, if at any point in a game, Team A had a 90% chance of winning the game, but the end result was a loss, then we categorized this event to be a choke for Team A. Throughout this entire analysis, we will reference such instances as ‘chokes’. Also, it must be noted that for each instance of a team who ‘choked’, their opponent also experienced a comeback. Given the symmetrical nature of these two occurrences, we will assume that for every time that Team A. choked against Team B, we will also conclude that Team B had a ‘comeback’ against Team A. This project will seek to provide an overview of statistical relationships between a range of variables, all focused around games with improbable endings in basketball, over the last four seasons. "],["data-sources.html", "Chapter 2 Data sources", " Chapter 2 Data sources Githhub: ‘swar/nba_api’ Our central data source for this project came from a Python wrapper for the NBA’s public API. The link to this wrapper and its documentation can be found here. This API is written for Python and as a result a large portion of our data clearing and exporting came from Python scripts and notebooks (which will be discussed in more detail later). This API grants access to a wide variety of baseketball-focused data, however, our project decided to narrow in on a few of its queries. Most importantly, we pulled the play-by-play data which provides a plethora of data at the moment-by-moment level of NBA games. Each row in this dataset corresponds to an event in the game, which falls into 1 of 3 categories. An event can be neutral, such as the beginning and ending of a quarter, or events can favor either of the teams, such as a point scored, a foul committed, turnover etc. In addition to a string description of each event, each row in this dataset also contains each team’s win probability at that moment in time which is already calculated by the NBA. Although we do not have the exact formula for how this crucial statistic is calculated, it is intuitively some function of point differential and time remaining in the game. This statistic is obviously critical for our analysis, since we are specifically looking at the games where a team had &gt;90% win probability at some point in time and then lost the game. We used this data set to initially pull every single game from the last 4 NBA seasons and identify the games where a ‘choke’ occurred. We also used this dataset to pull specific player-related data, in particular, how their performance changed over the course of a game that was classified as a ‘choke’. R Package: nbastatR https://www.rdocumentation.org/packages/nbastatR/versions/0.1.10131 In addition to the Python API to pull play-by-play and time-sensitive player data, we also leveraged the R package nbastatR. We used this dataset to get aggregate seasonal data for specific players. We decided to use this dataset since it allowed us to pull the data directly into R without needing external Python scripts. "],["data-transformation.html", "Chapter 3 Data transformation", " Chapter 3 Data transformation The data extraction and transformation process took substantial efforts throughout the course of this project. In order to identify all of the games where a ‘choke’ occurred over the last 4 NBA seasons, we needed to query over the data frames of 10,000 total games played, and the event-level data of each of these games. In order to identify a ‘choke’, we checked to see if at any point during the if a team had a win probability &gt; 90% and then ended up losing the game. Once we identified such an occurrence, we appended a row to a new dataset, which will hold all of the instances of chokes. Each row of this newly created dataset holds a game_id, the two teams who played, which of the teams was a home team vs. away team and finally which team choked. With this newly created dataset, we are able to identify the number of times each NBA team choked as well as whether they were playing at home or as a visitor. This newly created dataset is now ready to be exported from Python to R and used for analysis. Once we were able to identify the actual games that ended in a choke, we were interested in exploring the game-level data for these chokes. Therefore, for each game that was classified as a choke, we used its game_id (from our first dataset) to make an additional query to the nba_api to get the entire game’s play-by-play data. This data extraction process now gives us the entire game description of each game that ended in a choke over the last 4 NBA seasons. However, we needed to conduct additional transformations on this dataframe to make it more useful for our project. The main task was to convert the event_description strings to a categorical variable. This transformation then allows for us to assign a potential explanatory reason for each choke that occurred. In its original form, the API gives us the description of the play-by-play data in the form of a sentence and we wanted to convert these sentences to a single respective variable, whenever applicable. To provide an example of this transformation, a play-by-play description from the source dataset looked like: “MISS Finney-Smith 26’ 3PT Pullup Jump Shot” and we wanted to classify this row as simply a “miss”. Therefore, we parsed through the dataset’s event description data and classified each event into 1 of 3 categories: miss, foul, turnover. Given that these were the most frequent mistakes that a team will typically make and result in them losing, we looked to identify all of the moments in a game where one of these 3 occurrences took place. Additionally, in our analysis, we thought it would be of interest to examine player-level statistics in games that ended as a choke. Therefore, we leveraged our access to the play-by-play data and parsed over all the event descriptions to split each player’s points into 2 categories: their points scored before the max win threshold and then the points scored after. This max win threshold is a crucial point in the game, since it is after this point where a team with a sizable lead begins to lose steam. This transformation would allow for us to model the difference in distributions of players points during a choke, but split by the turning point in the game. We used the same nba_api play-by-play data’s event descriptions to determine which player is scoring at each moment of the game, whether or not their team ended up as the choke and if this point was scored before or after their max win threshold. While we did require additional data transformations later on in the project, overall, these initial processes took up the majority of our time in getting our data reformatted in such a way to then be exported to R for further analysis. "],["missing-values.html", "Chapter 4 Missing values", " Chapter 4 Missing values Play-by-play missing data plot: There are no fully complete cases in our play-by-play data set. While this appeared troublesome at first, further analysis of the dataset showed that these missing values are fairly intuitive. Most notably, there are 3 types of descriptions for (home description , away description, neutral description ). Intuitively, since we are looking at an for each row only 1 will appear in the data set. After looking through the data set, there are 2 specific cases in which there are both home and away descriptions: steal and turnover and shot attempt and blocked shot. Therefore, as we can see in our visualization of missing data, the “Neutral Description” variable is by far the least populated, which makes sense since there are very few reported neutral events in a game (such as: end of quarter 1, start of quarter 4…). However, as explained by the nature of home/visitor description, it is logical why these variables are also sparsely populated, due to their inherent mutually exclusive nature. As a result, we will end up merging these 3 columns into a single “description” variable, which will simply describe the play and will not be organized by home/away/neutral. This merged column will not contain missing values. Win probability is a crucial aspect of our analysis, and in our data set, we noticed that no win probabilities for either team are reported past the 5 minute mark in the 4th quarter. It is for this reason that the “HOME_PCT” and “VISITOR_PCT” also contain the next largest count of missing data. Due to this, we will not consider any win probabilities past this point in the game. However, given that our main research question is to classify the reasons for a game that ends in an upset, the 5 minute mark in the 4th quarter is a reasonable of the game to consider as a threshold. Therefore, it must be made clear that throughout our project, we are only able to identify games as ‘chokes’ when a team had a greater than 90% win probability, prior to entering the final 5 minutes of the game. Naturally, we have no issue with this restriction on our data set since the last few seconds of a game are likely extremely volatile and would likely skew our data. As a result, our chokes can be interpreted as instances when a team has a sizable lead at some point in the game prior to the final 5 minutes, and then subsequently loses. Other than these 2 important metrics, every other column is completely populated, since they contain data such as the time and points scored for each team, which can logically be reported at every instance of the game. "],["results.html", "Chapter 5 Results", " Chapter 5 Results To begin our analysis, it seemed logical to first gain a sense of which teams have recorded the most total chokes, as well as comebacks over the last 4 seasons. As a result, we used a Cleveland Dot plot to display a ranking of these teams. ##Total Chokes and Comebacks It is interesting to note here initially the top 5 choke teams as: Memphis, Minnesota, Miami, New Orleans, Charlotte and the top 5 comeback teams as Oklahoma City, Boston, Denver, Toronto and Los Angeles. We will use these teams in a moment to further explore the possible relationships between high choke / comeback teams and other variables. ##Choke and Comeback Relationship Further, it should be noted that being a high-comeback team and being a high-choke team are not entirely mutually exclusive. This initial data visualization showed that it is possible that a team can very well lie in both categories. A team can be simply extremely volatile (or stable) once they have secured a 90% (or fallen to a 10%) win probability, however the direction of that volatility is not consistent. Although there is no overlap within the top 5 teams in each category, it would be useful to determine if certain teams are just extremely volatile in both direction, given a sizable lead or disadvantage. Some interesting findings from this scatter plot is that there are indeed some teams with notable volatility (and stability) in their game play. For instance, Charlotte, a team we already identified to be within the top 5 choke teams also has a sizable number of comebacks. Further, Denver, a team that ranked in the top 5 comeback teams, was also within the top half of choke-prone teams. As a result, these two teams stand out in that for both of them, they stand out, relative to the rest of the league, in that their games often result in improbable endings, for better and for worse. Therefore, it would be of interest to investigate further aspects of these teams that cause them to stand out as improbable ending prone teams. Additionally, it was not surprising to notice that the number 1 team in both chokes and comebacks, MEM and OKC respectively, both ranked among the lowest in their respective opposite category. ##Home v. Visitor impact on Choke v. Comeback Given these top teams in both choke and comeback categories, we wanted to investigate whether or not being the home vs. visitor team was a significant determinant of the outcome of the game. In the sports community, it is often known that home teams typically have a slight advantage, however, we wanted to investigate the nuances of this advantage at the choke/comeback level. For all teams across the league, we have produced mosaic plots to get a visual representation of this potential relationship. We split the league in half, by alphabetical order just to have the graph not be overly crowded and to view the relationship more clearly. As we can see from the following two mosaic plots, some teams exhibit significant differences between their number of chokes and comebacks when they are home vs. when they are a visitor. What was most surprising from this visualization was that a vast majority of teams have a much higher comeback rate when they are a visitor. While most teams have this trend, teams such as DER and TOR show a strong positive relationship between them experiencing a comeback and being a visitor team. Perhaps a logical explanation for this finding is that home teams can do a better job of starting the game off strong, using the crowd and familiar environment to their advantage. As a result, many of the instances of comebacks for a team occur when they are a visitor, simply due to the fact that a home team has a better chance of gaining an early lead. On the flip side, for these same teams, they had much more chokes as home teams than as visitors. Along the same logic, this can likely be interpreted as home teams having the advantage of starting off a game very strong, but as a result, lends itself to the possibility of a choke in the latter part of the game. This finding was extremely curious to us since it caused us to question the true nature of having home-court advantage. However, given that this dataset is only considering the games that had a choke/comeback ending, this seemingly contradictory relationship is actually quite logical. ##Reasons for Choke, split by Home v. Away Now, given that there is some explanatory connection between being home vs. away and the outcome of a team’s game, we wanted to leverage the play-by-play data to see the most frequent events in a game that resulted in a choke. This analysis would enable us to assign a single cause to a choke instance and then examine holistically which of these causes are most common, split by home chokes vs. away chokes. We decided that a fair metric to determine the single cause for a choke would be to identify the event with the maximum standardized frequency. As mentioned earlier, the main 3 mistakes that a team makes which leads them to a choke include: misses, fouls and turnovers. However, it would be naive to simply count the frequencies of these events in a choke and then assign the event with the largest count to be the explanatory mistake. This is because in a game, naturally some of these events will occur more often than others, regardless of the final game outcome. To fix this, we looked at the ratio of the counts of each mistake, relative to the total league averages. We obtained these league averages from this website. (https://www.basketball-reference.com/leagues/NBA_stats_per_game.html). Since we standardized the frequencies of each mistake to the average, we can then identify the mistakes that occurred at the largest multiple, against the league average. As an example, if the number of fouls in a game is around 10, if a team commits 20 fouls, it is likely that since they committed 2x of the league average, their abundance of fouls was the main contributor for their choke. We used a bar chart to display the distribution of games that has misses, fouls or turnovers as their main explanatory variable. As we can see here, the clear leading cause for both home and away chokes are turnovers. Given that turnovers are the clear leading causes for chokes over the last 4 seasons, it would be of interest to investigate the turnover rates of specific players in the NBA, which will follow in our analysis. An additional interesting finding is that, for home chokes, misses are more frequent than fouls, but the opposite is true for away chokes. Therefore, fouls had a larger presence than misses for team to choke, when they are playing as a visitor. ##Player Stat Heat Maps Now that we have identified the teams with the highest chokes / comebacks, as well as the most frequent causes for these outcomes, it would be of interest to dive into some of the player-specific statistics. Given that fouls, misses, turnovers are all the cause of players’ specific actions, it would be of good use to visualize these, as well as other individual player-level statistics. This investigation would allow us to determine if, for high-choke teams, the main reasons for their unfortunate endings are the result of one specific player, or rather the team as a whole performing poorly in a specific category. The highest-choke team in our dataset was found to be The Memphis Grizzlies, therefore, it would be interesting to further explore their individual players’ statistics. Symmetrically, we also wanted to visualize the individual player-level statistics of the highest comeback team, the Oklahoma City Thunder. A natural way to express player-level data is in the form of a heatmap, showing the average ranking of that player in that statistic, over the course of their career. Given that players are often moved around teams, there is no perfect system to determine their statistics, filtered down to only the games when they played for a specific team, however, we simply decided to look at the individual player statistics who were most frequently on that team during their chokes/comebacks. This seemed like the most logical approach to solve the issue of inconsistent rosters, since we are looking at the player career stats of individuals who played on frequently choke / comeback teams. "],["interactive-component.html", "Chapter 6 Interactive component", " Chapter 6 Interactive component "],["conclusion.html", "Chapter 7 Conclusion", " Chapter 7 Conclusion "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
